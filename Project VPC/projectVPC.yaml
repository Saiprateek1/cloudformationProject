Resources:
  ProjectVpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "192.168.10.0/24" 
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Sai
          Value: ProjectVpc

  PublicSubnet1A:
    Type:  "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref ProjectVpc
      CidrBlock: "192.168.10.0/28"  # Unique CIDR block
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true 
      Tags:
        - Key: Sai
          Value: PublicSubnet1A

  AppPrivateSubnet1A:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref ProjectVpc
      CidrBlock: "192.168.10.16/28"  # Unique CIDR block
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Sai
          Value: AppPrivateSubnet1A

  DataPrivateSubnet1A:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref ProjectVpc 
      CidrBlock: "192.168.10.32/28"  # Unique CIDR block
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Sai
          Value: DataPrivateSubnet1A

  PublicSubnet2B:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref ProjectVpc
      CidrBlock: "192.168.10.48/28"  # Unique CIDR block
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: true  
      Tags:
        - Key: Sai
          Value: PublicSubnet2B

  AppPrivateSubnet2B:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref ProjectVpc
      CidrBlock: "192.168.10.64/28"  # Unique CIDR block
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Sai
          Value: AppPrivateSubnet2B

  DataPrivateSubnet2B:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref ProjectVpc
      CidrBlock: "192.168.10.80/28"  # Unique CIDR block
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Sai
          Value: DataPrivateSubnet2B

  # InternetGeteway IGW
  InternetGateway:
    Type : "AWS::EC2::InternetGateway" 
    Properties:
      Tags:
        - Key: Sai
          Value : ProjectVpc-IGW       

  # Attach Gateway
  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref ProjectVpc
      InternetGatewayId: !Ref InternetGateway

  # Route Table 
  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref ProjectVpc
      Tags:
        - Key: Sai
          Value: PublicRouteTable

  # Public Route       
  PublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: AttachGateway
    Properties:
      RouteTableId : !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  # Public Subnet Association 
  PublicSubnet1ARouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet2B
      RouteTableId: !Ref PublicRouteTable

  # Bastion Host EC2
  BastionHost:
   Type: "AWS::EC2::Instance"
   Properties:
     InstanceType: t2.micro
     KeyName: bastion
     ImageId: ami-04a37924ffe27da53
     SubnetId: !Ref  PublicSubnet2B
     SecurityGroupIds:
       - !Ref BastionSG
     Tags:
       - Key: Sai
         Value: BastionHost

  # Bastion Security Group
  BastionSG:
   Type: "AWS::EC2::SecurityGroup"
   Properties:
     GroupDescription: "Enable SSH access"
     VpcId: !Ref ProjectVpc
     SecurityGroupIngress:
       - IpProtocol: tcp
         FromPort: 22
         ToPort: 22
         CidrIp: 13.233.177.0/29


         


